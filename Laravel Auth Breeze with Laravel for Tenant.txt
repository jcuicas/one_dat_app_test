====================
Laravel Auth Breeze 
====================

1.- Crear una carpeta con el nombre del proyecto.

2.- Ubicarnos en dicha carpeta.

3.- Crear un proyecto nuevo en laravel:

	composer create-project laravel/laravel .

3.- Configurar con cual base de datos va ha conectar
	en el archivo .env (Si es MySQL usa esta configuración)
	
	DB_CONNECTION=mysql
	DB_HOST=127.0.0.1
	DB_PORT=3306
	DB_DATABASE=name_database
	DB_USERNAME=user_database
	DB_PASSWORD=password_database
	
4.- Ejecutar el comando: 
	
	php artisan migrate

5.- Ejecutar el comando:

	composer require laravel/breeze --dev

6.- Ejecutar el comando:

	php artisan breeze:install
	
7.- Ejecutar el comando:

	php artisan serve --host=localhost --port=8008
	
=========================
Cambiar a idioma español
=========================
	
1.- Ejecutar este comando para crea la carpeta lang

	php artisan lang:publish
	
2.- Buscamos el archivo .env la variable de entorno: APP_LOCALE=es

3.- Dentro de la carpeta lang creamos la carpeta es
 
4.- Instalar los archivos del idioma español. Ir a la web:

	https://laravel-lang.com/packages-lang.html
	
	Ejecutar los comandos:
		
		composer require --dev laravel-lang/lang
		
		php artisan lang:update
	
=============================
Instalar Tenancy for Laravel
=============================

1.- Descargar el paquete Tenancy for laravel:

	composer require stancl/tenancy
	
2.- Instalar Tenancy for laravel

	php artisan tenancy:install
	
3.- Ejecutar las migraciones:

	php artisan migrate
	
4.- Copiar la migraciones:

	Desde la carpeta migrations:
	
		0001_01_01_000000_create_users_table.php
		0001_01_01_000001_create_cache_table.php
		0001_01_01_000002_create_jobs_table.php
	
	a la carpeta subcarpeta tenant

5.- Registre el proveedor de servicios en bootstrap/providers.php:

	App\Providers\TenancyServiceProvider::class,
	
6.- Creando un modelo Tenant:

	php artisan make:model Tenant
	
7.- Copia este código al modelo Tenant

	<?php

	namespace App\Models;

	use Stancl\Tenancy\Database\Models\Tenant as BaseTenant;
	use Stancl\Tenancy\Contracts\TenantWithDatabase;
	use Stancl\Tenancy\Database\Concerns\HasDatabase;
	use Stancl\Tenancy\Database\Concerns\HasDomains;

	class Tenant extends BaseTenant implements TenantWithDatabase
	{
		use HasDatabase, HasDomains;
	} 
	
8.- Ahora necesitamos decirle al paquete que use este modelo personalizado.
	Abra el archivo config/tenancy.php y modifique la línea siguiente:
	
	'tenant_model' => \App\Models\Tenant::class,
	
9.- Agregar este código en tu archivo bootstrap\app.php:

        using: function () {
            $centralDomains = config('tenancy.central_domains');

            foreach ($centralDomains as $domain) {
                Route::middleware('web')
                ->domain($domain)
                ->group(base_path('routes/web.php'));
            }

            Route::middleware('web')->group(base_path('routes/tenant.php'));
        }
	
10.- Ahora necesitamos especificar los dominios centrales.
	 Abra el archivo config/tenancy.php y agréguelos en:
	 
	'central_domains' => [
		'one-dat-app.test',
	],

11.- Desactivar mapRoutes en el archivo app\Providers\TenancyServiceProvider.php

	public function boot()
    {
        $this->bootEvents();
        //$this->mapRoutes();

        $this->makeTenancyMiddlewareHighestPriority();
    }
	
12.- Cambiar el prefijo de las bases de datos tenant en config\tenancy.php

	'prefix' => 'agent_',
	

	